//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\render\Desktop\skola\skola_sesty_semestr\pjp\PLC_Lab8\PLC_Lab8\PLC_Lab8_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab8 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab8_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, WRITE=6, READ=7, IF=8, ELSE=9, 
		WHILE=10, INT_KEYWORD=11, FLOAT_KEYWORD=12, STRING_KEYWORD=13, BOOL_KEYWORD=14, 
		SEMI=15, COMMA=16, MUL=17, DIV=18, ADD=19, SUB=20, MOD=21, DOT=22, GT=23, 
		LT=24, EQUAL=25, NOTEQUAL=26, AND=27, OR=28, BANG=29, IDENTIFIER=30, FLOAT=31, 
		INT=32, BOOL=33, STRING=34, WS=35, LINE_COMMENT=36;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "WRITE", "READ", "IF", "ELSE", 
		"WHILE", "INT_KEYWORD", "FLOAT_KEYWORD", "STRING_KEYWORD", "BOOL_KEYWORD", 
		"SEMI", "COMMA", "MUL", "DIV", "ADD", "SUB", "MOD", "DOT", "GT", "LT", 
		"EQUAL", "NOTEQUAL", "AND", "OR", "BANG", "IDENTIFIER", "FLOAT", "INT", 
		"BOOL", "STRING", "WS", "LINE_COMMENT"
	};


	public PLC_Lab8_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'('", "')'", "'='", "'write'", "'read'", "'if'", 
		"'else'", "'while'", "'int'", "'float'", "'string'", "'bool'", "';'", 
		"','", "'*'", "'/'", "'+'", "'-'", "'%'", "'.'", "'>'", "'<'", "'=='", 
		"'!='", "'&&'", "'||'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "WRITE", "READ", "IF", "ELSE", "WHILE", 
		"INT_KEYWORD", "FLOAT_KEYWORD", "STRING_KEYWORD", "BOOL_KEYWORD", "SEMI", 
		"COMMA", "MUL", "DIV", "ADD", "SUB", "MOD", "DOT", "GT", "LT", "EQUAL", 
		"NOTEQUAL", "AND", "OR", "BANG", "IDENTIFIER", "FLOAT", "INT", "BOOL", 
		"STRING", "WS", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab8_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\xE1\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v"+
		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x6\x1F\xA8\n\x1F\r\x1F\xE\x1F\xA9\x3 \x6"+
		" \xAD\n \r \xE \xAE\x3 \x3 \x6 \xB3\n \r \xE \xB4\x3!\x6!\xB8\n!\r!\xE"+
		"!\xB9\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xC5\n\"\x3#\x3"+
		"#\a#\xC9\n#\f#\xE#\xCC\v#\x3#\x3#\x3$\x6$\xD1\n$\r$\xE$\xD2\x3$\x3$\x3"+
		"%\x3%\x3%\x3%\a%\xDB\n%\f%\xE%\xDE\v%\x3%\x3%\x2\x2\x2&\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$"+
		"G\x2%I\x2&\x3\x2\a\x4\x2\x43\\\x63|\x3\x2\x32;\x3\x2$$\x5\x2\v\f\xF\xF"+
		"\"\"\x4\x2\f\f\xF\xF\xE8\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2"+
		"\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2"+
		"\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17"+
		"\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2"+
		"\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2"+
		"\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3"+
		"\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2"+
		"\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2"+
		"?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2"+
		"\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x3K\x3\x2\x2\x2\x5M\x3\x2\x2\x2\aO\x3"+
		"\x2\x2\x2\tQ\x3\x2\x2\x2\vS\x3\x2\x2\x2\rU\x3\x2\x2\x2\xF[\x3\x2\x2\x2"+
		"\x11`\x3\x2\x2\x2\x13\x63\x3\x2\x2\x2\x15h\x3\x2\x2\x2\x17n\x3\x2\x2\x2"+
		"\x19r\x3\x2\x2\x2\x1Bx\x3\x2\x2\x2\x1D\x7F\x3\x2\x2\x2\x1F\x84\x3\x2\x2"+
		"\x2!\x86\x3\x2\x2\x2#\x88\x3\x2\x2\x2%\x8A\x3\x2\x2\x2\'\x8C\x3\x2\x2"+
		"\x2)\x8E\x3\x2\x2\x2+\x90\x3\x2\x2\x2-\x92\x3\x2\x2\x2/\x94\x3\x2\x2\x2"+
		"\x31\x96\x3\x2\x2\x2\x33\x98\x3\x2\x2\x2\x35\x9B\x3\x2\x2\x2\x37\x9E\x3"+
		"\x2\x2\x2\x39\xA1\x3\x2\x2\x2;\xA4\x3\x2\x2\x2=\xA7\x3\x2\x2\x2?\xAC\x3"+
		"\x2\x2\x2\x41\xB7\x3\x2\x2\x2\x43\xC4\x3\x2\x2\x2\x45\xC6\x3\x2\x2\x2"+
		"G\xD0\x3\x2\x2\x2I\xD6\x3\x2\x2\x2KL\a}\x2\x2L\x4\x3\x2\x2\x2MN\a\x7F"+
		"\x2\x2N\x6\x3\x2\x2\x2OP\a*\x2\x2P\b\x3\x2\x2\x2QR\a+\x2\x2R\n\x3\x2\x2"+
		"\x2ST\a?\x2\x2T\f\x3\x2\x2\x2UV\ay\x2\x2VW\at\x2\x2WX\ak\x2\x2XY\av\x2"+
		"\x2YZ\ag\x2\x2Z\xE\x3\x2\x2\x2[\\\at\x2\x2\\]\ag\x2\x2]^\a\x63\x2\x2^"+
		"_\a\x66\x2\x2_\x10\x3\x2\x2\x2`\x61\ak\x2\x2\x61\x62\ah\x2\x2\x62\x12"+
		"\x3\x2\x2\x2\x63\x64\ag\x2\x2\x64\x65\an\x2\x2\x65\x66\au\x2\x2\x66g\a"+
		"g\x2\x2g\x14\x3\x2\x2\x2hi\ay\x2\x2ij\aj\x2\x2jk\ak\x2\x2kl\an\x2\x2l"+
		"m\ag\x2\x2m\x16\x3\x2\x2\x2no\ak\x2\x2op\ap\x2\x2pq\av\x2\x2q\x18\x3\x2"+
		"\x2\x2rs\ah\x2\x2st\an\x2\x2tu\aq\x2\x2uv\a\x63\x2\x2vw\av\x2\x2w\x1A"+
		"\x3\x2\x2\x2xy\au\x2\x2yz\av\x2\x2z{\at\x2\x2{|\ak\x2\x2|}\ap\x2\x2}~"+
		"\ai\x2\x2~\x1C\x3\x2\x2\x2\x7F\x80\a\x64\x2\x2\x80\x81\aq\x2\x2\x81\x82"+
		"\aq\x2\x2\x82\x83\an\x2\x2\x83\x1E\x3\x2\x2\x2\x84\x85\a=\x2\x2\x85 \x3"+
		"\x2\x2\x2\x86\x87\a.\x2\x2\x87\"\x3\x2\x2\x2\x88\x89\a,\x2\x2\x89$\x3"+
		"\x2\x2\x2\x8A\x8B\a\x31\x2\x2\x8B&\x3\x2\x2\x2\x8C\x8D\a-\x2\x2\x8D(\x3"+
		"\x2\x2\x2\x8E\x8F\a/\x2\x2\x8F*\x3\x2\x2\x2\x90\x91\a\'\x2\x2\x91,\x3"+
		"\x2\x2\x2\x92\x93\a\x30\x2\x2\x93.\x3\x2\x2\x2\x94\x95\a@\x2\x2\x95\x30"+
		"\x3\x2\x2\x2\x96\x97\a>\x2\x2\x97\x32\x3\x2\x2\x2\x98\x99\a?\x2\x2\x99"+
		"\x9A\a?\x2\x2\x9A\x34\x3\x2\x2\x2\x9B\x9C\a#\x2\x2\x9C\x9D\a?\x2\x2\x9D"+
		"\x36\x3\x2\x2\x2\x9E\x9F\a(\x2\x2\x9F\xA0\a(\x2\x2\xA0\x38\x3\x2\x2\x2"+
		"\xA1\xA2\a~\x2\x2\xA2\xA3\a~\x2\x2\xA3:\x3\x2\x2\x2\xA4\xA5\a#\x2\x2\xA5"+
		"<\x3\x2\x2\x2\xA6\xA8\t\x2\x2\x2\xA7\xA6\x3\x2\x2\x2\xA8\xA9\x3\x2\x2"+
		"\x2\xA9\xA7\x3\x2\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA>\x3\x2\x2\x2\xAB\xAD\t"+
		"\x3\x2\x2\xAC\xAB\x3\x2\x2\x2\xAD\xAE\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2"+
		"\xAE\xAF\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xB2\a\x30\x2\x2\xB1\xB3\t"+
		"\x3\x2\x2\xB2\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2"+
		"\xB4\xB5\x3\x2\x2\x2\xB5@\x3\x2\x2\x2\xB6\xB8\t\x3\x2\x2\xB7\xB6\x3\x2"+
		"\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA"+
		"\x42\x3\x2\x2\x2\xBB\xBC\av\x2\x2\xBC\xBD\at\x2\x2\xBD\xBE\aw\x2\x2\xBE"+
		"\xC5\ag\x2\x2\xBF\xC0\ah\x2\x2\xC0\xC1\a\x63\x2\x2\xC1\xC2\an\x2\x2\xC2"+
		"\xC3\au\x2\x2\xC3\xC5\ag\x2\x2\xC4\xBB\x3\x2\x2\x2\xC4\xBF\x3\x2\x2\x2"+
		"\xC5\x44\x3\x2\x2\x2\xC6\xCA\a$\x2\x2\xC7\xC9\n\x4\x2\x2\xC8\xC7\x3\x2"+
		"\x2\x2\xC9\xCC\x3\x2\x2\x2\xCA\xC8\x3\x2\x2\x2\xCA\xCB\x3\x2\x2\x2\xCB"+
		"\xCD\x3\x2\x2\x2\xCC\xCA\x3\x2\x2\x2\xCD\xCE\a$\x2\x2\xCE\x46\x3\x2\x2"+
		"\x2\xCF\xD1\t\x5\x2\x2\xD0\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2\xD0"+
		"\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD4\x3\x2\x2\x2\xD4\xD5\b$\x2\x2"+
		"\xD5H\x3\x2\x2\x2\xD6\xD7\a\x31\x2\x2\xD7\xD8\a\x31\x2\x2\xD8\xDC\x3\x2"+
		"\x2\x2\xD9\xDB\n\x6\x2\x2\xDA\xD9\x3\x2\x2\x2\xDB\xDE\x3\x2\x2\x2\xDC"+
		"\xDA\x3\x2\x2\x2\xDC\xDD\x3\x2\x2\x2\xDD\xDF\x3\x2\x2\x2\xDE\xDC\x3\x2"+
		"\x2\x2\xDF\xE0\b%\x3\x2\xE0J\x3\x2\x2\x2\v\x2\xA9\xAE\xB4\xB9\xC4\xCA"+
		"\xD2\xDC\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab8
