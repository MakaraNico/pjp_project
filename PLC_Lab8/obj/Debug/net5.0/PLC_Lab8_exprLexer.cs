//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\render\Desktop\skola\skola_sesty_semestr\pjp\pjp_project-master\PLC_Lab8\PLC_Lab8_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab8 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab8_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, WRITE=6, READ=7, FOR=8, IF=9, 
		ELSE=10, WHILE=11, INT_KEYWORD=12, FLOAT_KEYWORD=13, STRING_KEYWORD=14, 
		BOOL_KEYWORD=15, SEMI=16, COMMA=17, MUL=18, DIV=19, ADD=20, SUB=21, MOD=22, 
		DOT=23, GT=24, LT=25, EQUAL=26, NOTEQUAL=27, AND=28, OR=29, BANG=30, FLOAT=31, 
		INT=32, BOOL=33, STRING=34, IDENTIFIER=35, WS=36, LINE_COMMENT=37;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "WRITE", "READ", "FOR", "IF", 
		"ELSE", "WHILE", "INT_KEYWORD", "FLOAT_KEYWORD", "STRING_KEYWORD", "BOOL_KEYWORD", 
		"SEMI", "COMMA", "MUL", "DIV", "ADD", "SUB", "MOD", "DOT", "GT", "LT", 
		"EQUAL", "NOTEQUAL", "AND", "OR", "BANG", "FLOAT", "INT", "BOOL", "STRING", 
		"IDENTIFIER", "WS", "LINE_COMMENT"
	};


	public PLC_Lab8_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'('", "')'", "'='", "'write'", "'read'", "'for'", 
		"'if'", "'else'", "'while'", "'int'", "'float'", "'string'", "'bool'", 
		"';'", "','", "'*'", "'/'", "'+'", "'-'", "'%'", "'.'", "'>'", "'<'", 
		"'=='", "'!='", "'&&'", "'||'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "WRITE", "READ", "FOR", "IF", "ELSE", 
		"WHILE", "INT_KEYWORD", "FLOAT_KEYWORD", "STRING_KEYWORD", "BOOL_KEYWORD", 
		"SEMI", "COMMA", "MUL", "DIV", "ADD", "SUB", "MOD", "DOT", "GT", "LT", 
		"EQUAL", "NOTEQUAL", "AND", "OR", "BANG", "FLOAT", "INT", "BOOL", "STRING", 
		"IDENTIFIER", "WS", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab8_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\xE9\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v"+
		"\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18"+
		"\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x6 \xAE\n"+
		" \r \xE \xAF\x3 \x3 \x6 \xB4\n \r \xE \xB5\x3!\x6!\xB9\n!\r!\xE!\xBA\x3"+
		"\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xC6\n\"\x3#\x3#\x3#\x3"+
		"#\a#\xCC\n#\f#\xE#\xCF\v#\x3#\x3#\x3$\x6$\xD4\n$\r$\xE$\xD5\x3%\x6%\xD9"+
		"\n%\r%\xE%\xDA\x3%\x3%\x3&\x3&\x3&\x3&\a&\xE3\n&\f&\xE&\xE6\v&\x3&\x3"+
		"&\x2\x2\x2\'\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'\x3\x2\a\x3\x2\x32;\x5\x2"+
		"\f\f\xF\xF$$\x4\x2\x43\\\x63|\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f\xF\xF\xF1"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2"+
		"\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2"+
		"\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2"+
		"\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2"+
		"\x2\x2K\x3\x2\x2\x2\x3M\x3\x2\x2\x2\x5O\x3\x2\x2\x2\aQ\x3\x2\x2\x2\tS"+
		"\x3\x2\x2\x2\vU\x3\x2\x2\x2\rW\x3\x2\x2\x2\xF]\x3\x2\x2\x2\x11\x62\x3"+
		"\x2\x2\x2\x13\x66\x3\x2\x2\x2\x15i\x3\x2\x2\x2\x17n\x3\x2\x2\x2\x19t\x3"+
		"\x2\x2\x2\x1Bx\x3\x2\x2\x2\x1D~\x3\x2\x2\x2\x1F\x85\x3\x2\x2\x2!\x8A\x3"+
		"\x2\x2\x2#\x8C\x3\x2\x2\x2%\x8E\x3\x2\x2\x2\'\x90\x3\x2\x2\x2)\x92\x3"+
		"\x2\x2\x2+\x94\x3\x2\x2\x2-\x96\x3\x2\x2\x2/\x98\x3\x2\x2\x2\x31\x9A\x3"+
		"\x2\x2\x2\x33\x9C\x3\x2\x2\x2\x35\x9E\x3\x2\x2\x2\x37\xA1\x3\x2\x2\x2"+
		"\x39\xA4\x3\x2\x2\x2;\xA7\x3\x2\x2\x2=\xAA\x3\x2\x2\x2?\xAD\x3\x2\x2\x2"+
		"\x41\xB8\x3\x2\x2\x2\x43\xC5\x3\x2\x2\x2\x45\xC7\x3\x2\x2\x2G\xD3\x3\x2"+
		"\x2\x2I\xD8\x3\x2\x2\x2K\xDE\x3\x2\x2\x2MN\a}\x2\x2N\x4\x3\x2\x2\x2OP"+
		"\a\x7F\x2\x2P\x6\x3\x2\x2\x2QR\a*\x2\x2R\b\x3\x2\x2\x2ST\a+\x2\x2T\n\x3"+
		"\x2\x2\x2UV\a?\x2\x2V\f\x3\x2\x2\x2WX\ay\x2\x2XY\at\x2\x2YZ\ak\x2\x2Z"+
		"[\av\x2\x2[\\\ag\x2\x2\\\xE\x3\x2\x2\x2]^\at\x2\x2^_\ag\x2\x2_`\a\x63"+
		"\x2\x2`\x61\a\x66\x2\x2\x61\x10\x3\x2\x2\x2\x62\x63\ah\x2\x2\x63\x64\a"+
		"q\x2\x2\x64\x65\at\x2\x2\x65\x12\x3\x2\x2\x2\x66g\ak\x2\x2gh\ah\x2\x2"+
		"h\x14\x3\x2\x2\x2ij\ag\x2\x2jk\an\x2\x2kl\au\x2\x2lm\ag\x2\x2m\x16\x3"+
		"\x2\x2\x2no\ay\x2\x2op\aj\x2\x2pq\ak\x2\x2qr\an\x2\x2rs\ag\x2\x2s\x18"+
		"\x3\x2\x2\x2tu\ak\x2\x2uv\ap\x2\x2vw\av\x2\x2w\x1A\x3\x2\x2\x2xy\ah\x2"+
		"\x2yz\an\x2\x2z{\aq\x2\x2{|\a\x63\x2\x2|}\av\x2\x2}\x1C\x3\x2\x2\x2~\x7F"+
		"\au\x2\x2\x7F\x80\av\x2\x2\x80\x81\at\x2\x2\x81\x82\ak\x2\x2\x82\x83\a"+
		"p\x2\x2\x83\x84\ai\x2\x2\x84\x1E\x3\x2\x2\x2\x85\x86\a\x64\x2\x2\x86\x87"+
		"\aq\x2\x2\x87\x88\aq\x2\x2\x88\x89\an\x2\x2\x89 \x3\x2\x2\x2\x8A\x8B\a"+
		"=\x2\x2\x8B\"\x3\x2\x2\x2\x8C\x8D\a.\x2\x2\x8D$\x3\x2\x2\x2\x8E\x8F\a"+
		",\x2\x2\x8F&\x3\x2\x2\x2\x90\x91\a\x31\x2\x2\x91(\x3\x2\x2\x2\x92\x93"+
		"\a-\x2\x2\x93*\x3\x2\x2\x2\x94\x95\a/\x2\x2\x95,\x3\x2\x2\x2\x96\x97\a"+
		"\'\x2\x2\x97.\x3\x2\x2\x2\x98\x99\a\x30\x2\x2\x99\x30\x3\x2\x2\x2\x9A"+
		"\x9B\a@\x2\x2\x9B\x32\x3\x2\x2\x2\x9C\x9D\a>\x2\x2\x9D\x34\x3\x2\x2\x2"+
		"\x9E\x9F\a?\x2\x2\x9F\xA0\a?\x2\x2\xA0\x36\x3\x2\x2\x2\xA1\xA2\a#\x2\x2"+
		"\xA2\xA3\a?\x2\x2\xA3\x38\x3\x2\x2\x2\xA4\xA5\a(\x2\x2\xA5\xA6\a(\x2\x2"+
		"\xA6:\x3\x2\x2\x2\xA7\xA8\a~\x2\x2\xA8\xA9\a~\x2\x2\xA9<\x3\x2\x2\x2\xAA"+
		"\xAB\a#\x2\x2\xAB>\x3\x2\x2\x2\xAC\xAE\t\x2\x2\x2\xAD\xAC\x3\x2\x2\x2"+
		"\xAE\xAF\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xB1\x3"+
		"\x2\x2\x2\xB1\xB3\a\x30\x2\x2\xB2\xB4\t\x2\x2\x2\xB3\xB2\x3\x2\x2\x2\xB4"+
		"\xB5\x3\x2\x2\x2\xB5\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6@\x3\x2\x2"+
		"\x2\xB7\xB9\t\x2\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8"+
		"\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\x42\x3\x2\x2\x2\xBC\xBD\av\x2\x2"+
		"\xBD\xBE\at\x2\x2\xBE\xBF\aw\x2\x2\xBF\xC6\ag\x2\x2\xC0\xC1\ah\x2\x2\xC1"+
		"\xC2\a\x63\x2\x2\xC2\xC3\an\x2\x2\xC3\xC4\au\x2\x2\xC4\xC6\ag\x2\x2\xC5"+
		"\xBC\x3\x2\x2\x2\xC5\xC0\x3\x2\x2\x2\xC6\x44\x3\x2\x2\x2\xC7\xCD\a$\x2"+
		"\x2\xC8\xCC\n\x3\x2\x2\xC9\xCA\a$\x2\x2\xCA\xCC\a$\x2\x2\xCB\xC8\x3\x2"+
		"\x2\x2\xCB\xC9\x3\x2\x2\x2\xCC\xCF\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCD"+
		"\xCE\x3\x2\x2\x2\xCE\xD0\x3\x2\x2\x2\xCF\xCD\x3\x2\x2\x2\xD0\xD1\a$\x2"+
		"\x2\xD1\x46\x3\x2\x2\x2\xD2\xD4\t\x4\x2\x2\xD3\xD2\x3\x2\x2\x2\xD4\xD5"+
		"\x3\x2\x2\x2\xD5\xD3\x3\x2\x2\x2\xD5\xD6\x3\x2\x2\x2\xD6H\x3\x2\x2\x2"+
		"\xD7\xD9\t\x5\x2\x2\xD8\xD7\x3\x2\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xD8\x3"+
		"\x2\x2\x2\xDA\xDB\x3\x2\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\xDD\b%\x2\x2\xDD"+
		"J\x3\x2\x2\x2\xDE\xDF\a\x31\x2\x2\xDF\xE0\a\x31\x2\x2\xE0\xE4\x3\x2\x2"+
		"\x2\xE1\xE3\n\x6\x2\x2\xE2\xE1\x3\x2\x2\x2\xE3\xE6\x3\x2\x2\x2\xE4\xE2"+
		"\x3\x2\x2\x2\xE4\xE5\x3\x2\x2\x2\xE5\xE7\x3\x2\x2\x2\xE6\xE4\x3\x2\x2"+
		"\x2\xE7\xE8\b&\x3\x2\xE8L\x3\x2\x2\x2\f\x2\xAF\xB5\xBA\xC5\xCB\xCD\xD5"+
		"\xDA\xE4\x4\b\x2\x2\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab8
